{"ast":null,"code":"var _jsxFileName = \"/Users/adarshashok/Downloads/OffRampForm/offrampform/src/Components/PageComponents/CleanTextBox.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./CleanTextBox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CleanTextBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: props.locked && props.active || false,\n      value: props.value || \"\",\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({\n      value,\n      error: \"\"\n    });\n  }\n  handleKeyPress(event) {\n    if (event.which === 13) {\n      this.setState({\n        value: this.props.predicted\n      });\n    }\n  }\n  render() {\n    const {\n      active,\n      value,\n      error,\n      label\n    } = this.state;\n    const {\n      predicted,\n      locked\n    } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) && \"active\"} ${locked && !active && \"locked\"}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: fieldClassName,\n      children: [active && value && predicted && predicted.includes(value) && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"predicted\",\n        children: predicted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: 1,\n        type: \"text\",\n        value: value,\n        placeholder: label,\n        onChange: this.changeValue.bind(this),\n        onKeyPress: this.handleKeyPress.bind(this),\n        onFocus: () => !locked && this.setState({\n          active: true\n        }),\n        onBlur: () => !locked && this.setState({\n          active: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: 1,\n        className: error && \"error\",\n        children: error || label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nrender( /*#__PURE__*/_jsxDEV(\"input\", {\n  id: 1,\n  label: \"Field label\",\n  predicted: \"California\",\n  locked: false,\n  active: false\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nexport default CleanTextBox;","map":{"version":3,"names":["React","render","jsxDEV","_jsxDEV","CleanTextBox","Component","constructor","props","state","active","locked","value","error","label","changeValue","event","target","setState","handleKeyPress","which","predicted","fieldClassName","className","children","includes","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","bind","onKeyPress","onFocus","onBlur","htmlFor","document","getElementById"],"sources":["/Users/adarshashok/Downloads/OffRampForm/offrampform/src/Components/PageComponents/CleanTextBox.js"],"sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./CleanTextBox.css\";\n\nclass CleanTextBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      value: props.value || \"\",\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    }; \n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({ value, error: \"\" });\n  }\n\n  handleKeyPress(event) {\n    if (event.which === 13) {\n      this.setState({ value: this.props.predicted });\n    }\n  }\n\n  render() {\n    const { active, value, error, label } = this.state;\n    const { predicted, locked } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) &&\n      \"active\"} ${locked && !active && \"locked\"}`;\n\n    return (\n      <div className={fieldClassName}>\n        {active &&\n          value &&\n          predicted &&\n          predicted.includes(value) && <p className=\"predicted\">{predicted}</p>}\n        <input\n          id={1}\n          type=\"text\"\n          value={value}\n          placeholder={label}\n          onChange={this.changeValue.bind(this)}\n          onKeyPress={this.handleKeyPress.bind(this)}\n          onFocus={() => !locked && this.setState({ active: true })}\n          onBlur={() => !locked && this.setState({ active: false })}\n        />\n        <label htmlFor={1} className={error && \"error\"}>\n          {error || label}\n        </label>\n      </div>\n    );\n  }\n}\n\nrender(\n  <input\n    id={1}\n    label=\"Field label\"\n    predicted=\"California\"\n    locked={false}\n    active={false}\n  />,\n  document.getElementById(\"root\")\n);\n\nexport default CleanTextBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}